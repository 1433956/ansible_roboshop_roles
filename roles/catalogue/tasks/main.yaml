- name: disable current module nodejs
  ansible.builtin.command: dnf module disable nodejs -y

- name: Enable required module nodejs
  ansible.builtin.command:  dnf module enable nodejs:20 -y

- name: install nodejs
  ansible.builtin.dnf:
    name: nodejs
    state: present
- name: create system user roboshop
  ansible.builtin.user:
    name: roboshop
    shell: /sbin/nologin
    home: /app
    system: true
- name: create new directory /app
  ansible.builtin.file:
    path: /app
    state: directory
- name: download catalogue project 
  ansible.builtin.get_url:
    url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip
    dest: /tmp/catalogue.zip
    remote_src: yes

- name: unzip catalogue project
  ansible.builtin.unarchive:
    src: /tmp/atalogue.zip
    dest: /app
    remote_src: yes
- name: download nodejs dependecies
  community.general.npm:
    path: /app

- name: setup catalogue service
  ansible.builtin.template:
    src: catalogue.service.j2
    dest: /etc/systemd/system/catalogue.service

- name: deamon reload service
  ansible.builtin.systemd_service:
    daemon_reload: true
- name: enable and start catalogue service
  ansible.builtin.service:
    name: catalogue
    state: started
    enabled: yes
- name: copy mongo repo
  ansible.builtin.copy:
    src: mongo.repo
    dest: /etc/yum.repos.d/mongo.repo
- name: install mongodb client
  ansible.builtin.dnf:
    name: mongodb-mongosh
    state: present
- name: check wheather data is load or not
  ansible.builtin.command: mongosh --host mongodb.devops73.site --eval 'db.getMongo().getDBNames().indexOf("catalogue")'
  register: catalogue_output
- name: check data is load or not 
  ansible.builtin.debug:
    msg: {{ catalogue_output }}
- name: load data into mongodb
  ansible.builtin.shell: mongosh --host mongodb.devops73.site < /app/db/master-data.js
  when: catalogue_output.stdout | int < 0
- name: restart catalogue service
  ansible.builtin.service:
    name: catalogue
    state: restarted

